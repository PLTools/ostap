name: Build master

on:
  push:
    paths-ignore:
      - 'papers/**'
      # do not run CI if we are writing a paper
      # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-ignoring-paths
    branches:
      - 'master'
  #schedule:
  #  - cron: "0 13 * * 1"
    # https://jasonet.co/posts/scheduled-actions/
env:
  OPAMROOT: /home/user/.opam
  OPAMCONFIRMLEVEL: unsafe-yes

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: kakadu18/ocaml:pltools
      options: --user user

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - run: opam --version
      - run: opam exec -- ocamlopt --version

      - name: Checkout code
        uses: actions/checkout@v4

      - run: opam update

      - name: Install dependencies
        run: opam install . --yes --deps-only --with-test --with-doc
      - run: opam exec -- dune build
      - run: opam exec -- dune runtest

      - name: Build and Test in Release
        run: |
          opam exec -- dune build @all @check --profile=release
          opam exec -- dune build @runtest --profile=release

      #### API documentation
      - name: Build API documentation
        run: |
          opam exec -- dune b @install --profile=release
          opam exec -- dune install
          opam exec -- odig odoc --odoc-theme=odig.gruvbox.light --no-tag-index --no-pkg-deps ${{ env.latest }}
          echo "DOCS_PATH=$(opam exec -- odig cache path)/html" >> $GITHUB_ENV

      - run: ls $(opam exec -- odig cache path)/html

      - run: ls $(opam exec -- odig cache path)/html/ostap

      - name: Deploy API documentation
        #if: ${{ github.event.pull_request.head.repo.full_name == 'PLTools/OCanren' }}
        #if: false
        # We do not deploy in forks
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.DOCS_PATH }}
          destination_dir: api

      #### Check that installed ostap works
      - run: |
          opam exec -- dune install
          opam show ostap --list-files

      - run: |
          opam exec -- ocamlfind c -i -syntax camlp5o -package ostap,GT.syntax,GT.syntax.all,ostap.syntax camlp5/regression/test100.ml